# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# name: Java CI with Maven

# on:


# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up JDK 11
#       uses: actions/setup-java@v4
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn --batch-mode --file ./pom.xml dependency:purge-local-repository clean package deploy
#       env:
#         user_name: ${{ secrets.USER_NAME }}
#         user_token: ${{ secrets.USER_TOKEN }}
        
#     - name: Upload JAR artifact
#       uses: actions/upload-artifact@v3
#       with:
#         name: application
#         path: target/*.jar



name: maven build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: {}

env:
  GITHUB_WORKFLOW_RUN_ID: "${{ github.ref_name }}.${{ github.run_id }}"
  service: "sample-project"
  PROJECT_SUB_DIR: ""

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}










        name: Build and Upload JAR

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Build JAR
        run: ./gradlew build # or use ./mvnw package for Maven

      - name: Upload JAR to Azure Blob Storage
        uses: azure/cli-action@v1
        with:
          azcliversion: '2.44.2' # Specify the Azure CLI version
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

        run: |
          # Login to Azure
          az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
          
          # Upload JAR file
          az storage blob upload \
            --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
            --container-name ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }} \
            --name my-app.jar \
            --file path/to/your/jar-file.jar

